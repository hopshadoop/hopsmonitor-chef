### Welcome to the InfluxDB configuration file

# The values in this file override the default values used by the system if
# a config option is not specified.  The commented out lines are the the configuration
# field and the default value used.  Uncommentting a line and changing the value
# will change the value used at runtime when the process is restarted.
# Once every 24 hours InfluxDB will report usage data to usage.influxdata.com 
# The data includes a random ID, os, arch, version, the number of series and other 
# usage data. No data from user databases is ever transmitted.
# Change this option to true to disable reporting.
reporting-disabled = true 

# we'll try to get the hostname automatically, but if it the os returns something
# that isn't resolvable by other servers in the cluster, use this option to
# manually set the hostname
# hostname = "localhost" 

#bind-address = "<%= @my_ip %>:<%= node['influxdb']['port'] %>"
bind-address = ":<%= node['influxdb']['port'] %>"
###      


[admin]

bind-address = ":<%= node['influxdb']['admin']['port'] %>"                 
enabled = true
https-enabled = false
https-certificate = "<%= @certificate %>"

[http]


bind-address = ":<%= node['influxdb']['http']['port'] %>"
auth-enabled = true
### [meta] 
###
### Controls the parameters for the Raft consensus group that stores metadata 
### about the InfluxDB cluster.
### 

[meta]
  # Where the metadata/raft database is stored
  # dir = "/var/lib/influxdb/meta"
  dir = "<%= node['influxdb']['base_dir'] %>/meta"

###    
### [data]
###        
### Controls where the actual shard data for InfluxDB lives and how it is
### flushed from the WAL. "dir" may need to be changed to a suitable place
### for your system, but the WAL settings are an advanced configuration. The
### defaults should work for most systems.
###

[data]
  # The directory where the TSM storage engine stores TSM files.
  dir = "<%= node['influxdb']['base_dir'] %>/data"
  # The directory where the TSM storage engine stores WAL files.
  wal-dir = "<%= node['influxdb']['base_dir'] %>/wal"
  max-series-per-database = <%= node['influxdb']['series']['max'] %>

###	   
### [[graphite]]
###                 
### Controls one or many listeners for Graphite data.
###

[[graphite]]
  # Determines whether the graphite endpoint is enabled.
   enabled = true
   database = "graphite"
  # retention-policy = ""
   bind-address = "<%= @my_ip %>:<%= node['influxdb']['graphite']['port'] %>"
   conprotocol = "tcp"
  # consistency-level = "one"
  # These next lines control how batching works. You should have this enabled 
  # otherwise you could get dropped metrics or poor performance. Batching
  # will buffer points in memory if you have many coming in.

  # Flush if this many points get buffered           
   batch-size = 5000

  # metrics separator, replace . with _
  # separator = "_" 

  # number of batches that may be pending in memory	 
   batch-pending = 10

  # Flush at least this often even if we haven't hit buffer limit
   batch-timeout = "1s"

  templates = [
     "spark.* measurement.appid.service.source.field*",
     "resourcemanager.* measurement.service.source.details.context.<%= @hostnamepattern %>.field*",

     # Graphite isn't really dynamic... Handle 8 fields in a measurement A.B.C. etc
     "nodemanager.container.* measurement.service.source....<%= @hostnamepattern %>.field",

     # Handle 7 length measurements
     "nodemanager.jvm.* measurement.service.source...<%= @hostnamepattern %>.field",
     "nodemanager.rpc.* measurement.service.source...<%= @hostnamepattern %>.field",
     "nodemanager.rpcdetailed.* measurement.service.source...<%= @hostnamepattern %>.field",

     # Handle 6 length ...
     "nodemanager.mapred.* measurement.service.source..<%= @hostnamepattern %>.field",
     "nodemanager.metricssystem.* measurement.service.source..<%= @hostnamepattern %>.field",
     "nodemanager.ugi.* measurement.service.source..<%= @hostnamepattern %>.field",
     "nodemanager.yarn.* measurement.service.source..<%= @hostnamepattern %>.field",

     "datanode.* measurement.service.source.details.context.<%= @hostnamepattern %>.field*",
     "namenode.dfs.* measurement.service.source.context.<%= @hostnamepattern %>.field*",
     "namenode.jvm.* measurement.service.source.context..<%= @hostnamepattern %>.field*",
     "namenode.* measurement.service.source.details.context.<%= @hostnamepattern %>.field*",
     "measurement*"
   ]
